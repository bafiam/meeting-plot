[{"/home/bafiam/microverse/Capstones/meeting-plot/src/reportWebVitals.js":"1","/home/bafiam/microverse/Capstones/meeting-plot/src/App.js":"2","/home/bafiam/microverse/Capstones/meeting-plot/src/index.js":"3","/home/bafiam/microverse/Capstones/meeting-plot/src/utils/data.js":"4","/home/bafiam/microverse/Capstones/meeting-plot/src/utils/fetchYData.js":"5","/home/bafiam/microverse/Capstones/meeting-plot/src/utils/fetchXData.js":"6"},{"size":362,"mtime":1609684997830,"results":"7","hashOfConfig":"8"},{"size":3854,"mtime":1609740221161,"results":"9","hashOfConfig":"8"},{"size":571,"mtime":1609739575222,"results":"10","hashOfConfig":"8"},{"size":1323,"mtime":1609693021084,"results":"11","hashOfConfig":"8"},{"size":1234,"mtime":1609739354905,"results":"12","hashOfConfig":"8"},{"size":221,"mtime":1609705599813,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"coew8x",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/home/bafiam/microverse/Capstones/meeting-plot/src/reportWebVitals.js",[],["30","31"],"/home/bafiam/microverse/Capstones/meeting-plot/src/App.js",[],"/home/bafiam/microverse/Capstones/meeting-plot/src/index.js",[],"/home/bafiam/microverse/Capstones/meeting-plot/src/utils/data.js",[],["32","33"],"/home/bafiam/microverse/Capstones/meeting-plot/src/utils/fetchYData.js",["34","35","36","37"],"const fetchYData = (data, arrOfWks) => {\n  return new Promise((resolve, reject) => {\n    let results = [];\n    arrOfWks.forEach((wk) => {\n      if (wk == 1) {\n        let res = [];\n        data.forEach((element) => res.push(element.numberOfTypeA));\n        results.push({ type: \"line\", text: \"Number of Type A\", values: res});\n      }\n      if (wk == 2) {\n        let res = [];\n        data.forEach((element) => res.push(element.numberOfTypeB));\n        results.push({  type: \"line\", text: \"Number of Type B\", values: res });\n      }\n      if (wk == 3) {\n        let res = [];\n        data.forEach((element) => res.push(element.numberOfTypeC));\n        results.push({  type: \"line\", text: \"Number of Type C\",  values: res });\n      }\n      if (wk == 4) {\n        let res = [];\n        data.forEach((element) => {\n          let sum = [];\n          sum.push(\n            element.numberOfTypeA,\n            element.numberOfTypeB,\n            element.numberOfTypeC\n          );\n          let total = sum.reduce((a, b) => a + b, 0);\n          res.push(total);\n        });\n        results.push({  type: \"line\", text: \"Cumulative of Type A, B & C\", values: res });\n      }\n    });\n\n    resolve(results);\n  });\n};\n\nexport default fetchYData;\n","/home/bafiam/microverse/Capstones/meeting-plot/src/utils/fetchXData.js",[],["38","39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"40","replacedBy":"44"},{"ruleId":"42","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":5,"column":14,"nodeType":"48","messageId":"49","endLine":5,"endColumn":16},{"ruleId":"46","severity":1,"message":"47","line":10,"column":14,"nodeType":"48","messageId":"49","endLine":10,"endColumn":16},{"ruleId":"46","severity":1,"message":"47","line":15,"column":14,"nodeType":"48","messageId":"49","endLine":15,"endColumn":16},{"ruleId":"46","severity":1,"message":"47","line":20,"column":14,"nodeType":"48","messageId":"49","endLine":20,"endColumn":16},{"ruleId":"40","replacedBy":"50"},{"ruleId":"42","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],["52"],["53"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["52"],["53"],"no-global-assign","no-unsafe-negation"]