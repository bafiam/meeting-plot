[{"/home/bafiam/microverse/Capstones/meeting-plot/src/reportWebVitals.js":"1","/home/bafiam/microverse/Capstones/meeting-plot/src/App.js":"2","/home/bafiam/microverse/Capstones/meeting-plot/src/index.js":"3","/home/bafiam/microverse/Capstones/meeting-plot/src/utils/data.js":"4","/home/bafiam/microverse/Capstones/meeting-plot/src/utils/fetchYData.js":"5","/home/bafiam/microverse/Capstones/meeting-plot/src/utils/fetchXData.js":"6"},{"size":362,"mtime":1609684997830,"results":"7","hashOfConfig":"8"},{"size":3318,"mtime":1609709219858,"results":"9","hashOfConfig":"8"},{"size":842,"mtime":1609703241183,"results":"10","hashOfConfig":"8"},{"size":1323,"mtime":1609693021084,"results":"11","hashOfConfig":"8"},{"size":680,"mtime":1609705807472,"results":"12","hashOfConfig":"8"},{"size":221,"mtime":1609705599813,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"coew8x",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/home/bafiam/microverse/Capstones/meeting-plot/src/reportWebVitals.js",[],"/home/bafiam/microverse/Capstones/meeting-plot/src/App.js",[],"/home/bafiam/microverse/Capstones/meeting-plot/src/index.js",["30","31","32"],"/home/bafiam/microverse/Capstones/meeting-plot/src/utils/data.js",[],["33","34"],"/home/bafiam/microverse/Capstones/meeting-plot/src/utils/fetchYData.js",["35","36","37"],"const fetchYData = (data, arrOfWks) => {\n  return new Promise((resolve, reject) => {\n    let results = [];\n    arrOfWks.forEach((wk) => {\n      if (wk == 1) {\n        let res = [];\n        data.forEach((element) => res.push(element.numberOfTypeA));\n        results.push({ values: res });\n      }\n      if (wk == 2) {\n        let res = [];\n        data.forEach((element) => res.push(element.numberOfTypeB));\n        results.push({ values: res });\n      }\n      if (wk == 3) {\n        let res = [];\n        data.forEach((element) => res.push(element.numberOfTypeC));\n        results.push({ values: res });\n      }\n    });\n\n    resolve(results);\n  });\n};\n\nexport default fetchYData;\n",["38","39"],"/home/bafiam/microverse/Capstones/meeting-plot/src/utils/fetchXData.js",[],["40","41"],{"ruleId":"42","severity":2,"message":"43","line":9,"column":1,"nodeType":"44","messageId":"45","endLine":9,"endColumn":10},{"ruleId":"42","severity":2,"message":"43","line":10,"column":1,"nodeType":"44","messageId":"45","endLine":10,"endColumn":10},{"ruleId":"42","severity":2,"message":"43","line":13,"column":1,"nodeType":"44","messageId":"45","endLine":13,"endColumn":10},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":5,"column":14,"nodeType":"52","messageId":"53","endLine":5,"endColumn":16},{"ruleId":"50","severity":1,"message":"51","line":10,"column":14,"nodeType":"52","messageId":"53","endLine":10,"endColumn":16},{"ruleId":"50","severity":1,"message":"51","line":15,"column":14,"nodeType":"52","messageId":"53","endLine":15,"endColumn":16},{"ruleId":"46","replacedBy":"54"},{"ruleId":"48","replacedBy":"55"},{"ruleId":"46","replacedBy":"56"},{"ruleId":"48","replacedBy":"57"},"no-undef","'zingchart' is not defined.","Identifier","undef","no-native-reassign",["58"],"no-negated-in-lhs",["59"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["58"],["59"],["58"],["59"],"no-global-assign","no-unsafe-negation"]